import Z1
import Z2
import Z3

# Тестирование задачи 1 Дан список, состоящий из n элементов, причем тип элементов может быть разным. Найти
# количество целых отрицательных чисел. Если количество четное, то число равное количеству
# добавить первым элементом, если нечетное – то последним.
my_list = [17, -2, 3, -4.5, 5, "e", -3, True, -7]
my_list2 = ["a", -4, 2.5, 17, -2, "r"]
print("Задача 1:")
print("Исходный список 1:", my_list)
print("Результат 1:", Z1.count_negative_integers(my_list))
print("Исходный список 2:", my_list2)
print("Результат 2:", Z1.count_negative_integers(my_list2))



# Тестирование задачи 2 Используя конструкцию генератора списка создайте вложенный список 5х5 корней из
# трехзначных чисел.
result = Z2.nested_sqrt_list()
print("\nЗадача 2:")
for row in result:
    print(row)



# Тестирование задачи 3 Составить функцию, которая для n точек на плоскости находит количество точек, лежащих внутри
# окружности с радиусом равным r. По умолчанию r=1. 
points = [(0, 0), (1, 1), (2, 2), (0, 2)]
print("\nЗадача 3:")

result = Z3.points_in_circle(points)
print("Количество точек внутри окружности с радиусом", result[0], ":", result[1])

rad=2
result1 = Z3.points_in_circle(points, rad)
print("Количество точек внутри окружности с радиусом", result1[0], ":", result1[1])